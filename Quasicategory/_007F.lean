import Quasicategory._007F_1

/-!

The second half of the proof of `007F`, which is much more technical.

-/

universe w v u


open CategoryTheory Simplicial MorphismProperty MonoidalCategory SSet

lemma innerAnodyne_eq_T : innerAnodyne.{u} = (WeaklySaturatedClassOf.{u} bdryPushoutClass) := by
  rw [innerAnodyne_eq]
  ext X Y f
  refine ⟨?_, ?_⟩ -- other direction is more technical
  intro h
  refine minimalWeaklySaturated bdryPushoutClass.WeaklySaturatedClassOf InnerHornInclusions ?_ (by infer_instance) _ h
  intro A B g hg
  induction hg with
  | @mk n i h0 hn =>
    apply WeaklySaturatedOf.retract -- reduces to showing horn inclusion is a retract of a boundary pushout maps
    · exact hornRetract (n + 2) i h0 hn
    · exact monomorphisms_le_S (horn (n + 2) i).ι (hornInclusion_mono _ _)
  refine minimalWeaklySaturated InnerHornInclusions.WeaklySaturatedClassOf bdryPushoutClass ?_ (by infer_instance) f
  intro _ _ f hf
  induction hf with | @mk m =>
  rw [← innerAnodyne_eq]
  -- show that the pushout product of ∂Δ[m] ⟶ Δ[m] and Λ[2, 1] ⟶ Δ[2] is generated by inner anodyne maps
  sorry

-- `007F` (a)
lemma monoPushout_innerAnodyne {A B : SSet} (i : A ⟶ B) [hi : Mono i] :
    innerAnodyne (PushoutProduct.pushoutProduct i (horn 2 1).ι) := by
  rw [innerAnodyne_eq_T]
  exact monomorphisms_le_S i hi

-- `007F` (b)
lemma contains_innerAnodyne_iff_contains_pushout_maps
    (S : MorphismProperty SSet) (hS : WeaklySaturated.{u} S) :
    (∀ m, S (PushoutProduct.pushoutProduct (boundary m).ι (horn 2 1).ι)) ↔ (∀ {X Y : SSet} (p : X ⟶ Y) (_ : innerAnodyne.{u} p), S p) := by
  refine ⟨?_, fun h m ↦ h _ (monoPushout_innerAnodyne (boundary m).ι)⟩
  intro h X Y p hp
  rw [innerAnodyne_eq_T] at hp
  refine minimalWeaklySaturated S bdryPushoutClass ?_ hS _ hp
  intro _ _ _ hf
  induction hf with
  | @mk m => exact h m
